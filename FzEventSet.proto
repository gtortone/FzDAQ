package DAQ;

option optimize_for = SPEED;
option cc_generic_services = false;

message Energy {
  repeated uint32 value = 1;
  required bool len_error = 2;
}

message Waveform {

  required uint32 pretrig = 1;
  repeated int32 sample = 2 [packed=true];
  required bool len_error = 3;
}

message FzData {

  enum FzDataType {
    QH1 = 0;
    I1  = 1;
    QL1 = 2;
    Q2  = 3;
    I2  = 4;
    Q3  = 5;
    ADC = 6;
    UNKDT = 7;	// unknown datatype
  }

  required FzDataType type = 1;
  optional Energy energy = 2;
  optional Waveform waveform = 3;
}

message FzHit {

  enum FzFec {
    FEC0 = 0;
    FEC1 = 1;
    FEC2 = 2;
    FEC3 = 3;
    FEC4 = 4;
    FEC5 = 5;
    FEC6 = 6;
    FEC7 = 7;
    ADCF = 15; // F
    UNKFEC  = 16;	// unknown fec
  }

  enum FzTelescope {
     A = 0;
     B = 1;
     UNKT = 2;
  }

  enum FzDetector {
     Si1 = 0;
     Si2 = 1;
     CsI = 2;
     UNKD = 3;	// unknown detector
  }

  required uint32 ec = 1;
  required FzTelescope telid = 2;
  required FzDetector detid = 3;
  required FzFec feeid = 4;
  required uint32 gttag = 5;
  required uint32 dettag = 6;
  repeated FzData data = 7;
}

message FzFee {

  enum FzFec {
    FEC0 = 0;
    FEC1 = 1;
    FEC2 = 2;
    FEC3 = 3;
    FEC4 = 4;
    FEC5 = 5;
    FEC6 = 6;
    FEC7 = 7;
    ADCF = 15;  // F
    UNKFEC  = 16; 	// unknown fec
  }

  required FzFec feeid = 1;
  repeated FzHit hit = 2;
  required bool len_error = 3;
  required bool crc_error = 4;
}

message FzBlock {

  required uint32 blkid = 1;
  repeated FzFee fee = 2;
  required bool len_error = 3;
  required bool crc_error = 4;
}

message FzEvent {

  required uint32 ec = 1;
  repeated FzBlock block = 2;
  required uint32 regid = 3;
}

message FzEventSet {
  repeated FzEvent ev = 1;
}
